Suitable Timestamp 

Oracle:  dd-MMM-yy hh.mm.ss.SSSSSSSSS

Postgres: yyyy-MM-dd HH:mm:ss.SSSSSS

DB2: yyyy-MM-dd HH:mm:ss.SSSSSS

MySql: yyyy-MM-dd HH:mm:ss

MsSQL server: yyyy-MM-dd HH:mm:sss

-------------------------------------------------------------------------------------
ORACLE DB:

CREATE TABLE logs (
    log_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    message VARCHAR(2) NOT NULL,
    logged_at TIMESTAMP (2) NOT NULL,
    PRIMARY KEY (log_id)
);

INSERT INTO logs (
    message,
    logged_at
    )
VALUES (
    'aa',
    LOCALTIMESTAMP(2)
    );

INSERT INTO logs (
    message,
    logged_at
    )
VALUES (
    'ab',
    LOCALTIMESTAMP(2)
    );
    
    SELECT log_id,
       message,
       logged_at,updatesat
FROM logs;

update logs set message='aa', logged_at = LOCALTIMESTAMP where log_id=5;

---------------------------------------------------------------------------------------

Microsoft SQL DB:

CREATE TABLE increment2 (
         empid INT  PRIMARY KEY,
         empname VARCHAR(100),
         deptname VARCHAR(100),
         salary int,
         incrementperct varchar(50),
         joiningdate datetime NOT NULL DEFAULT getdate()   
       );
	   
update increment2
set salary = 52340,joiningdate = getdate()
where empid =2;

insert into increment2(empid, empname, deptname, salary, incrementperct)
VALUES(2, 'Ajay', 'Testing', 25000, '10%');

insert into increment2(empid, empname, deptname, salary, incrementperct)
VALUES(3, 'David', 'Testing', 15000, '10%');	   

------------------------------------------------------------------------------------------

MYSQL DB:

CREATE TABLE increment (
         empid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
         empname VARCHAR(100),
         deptname VARCHAR(100),
         salary int,
         incrementperct varchar(50),
         joiningdate TIMESTAMP NOT NULL  
       );

insert into increment(empid, empname, deptname, salary, incrementperct, joiningdate)
VALUES(1, 'Gaurav', 'Finance', 20000, '10%', LOCALTIMESTAMP(2));

select * from increment;

insert into increment(empid, empname, deptname, salary, incrementperct, joiningdate)
VALUES(2, 'Ajay', 'Testing', 25000, '10%', LOCALTIMESTAMP(2));

insert into increment(empid, empname, deptname, salary, incrementperct, joiningdate)
VALUES(3, 'David', 'Testing', 15000, '10%', LOCALTIMESTAMP(2));

update increment
set salary = 50000, joiningdate = localtimestamp(2) 
where empid =1;

-------------------------------------------------------------------------------------------------
Postgres DB:

CREATE TABLE logs (
    log_id INT,
    message VARCHAR(2) NOT NULL,
    logged_at TIMESTAMP (2) NOT NULL,
    PRIMARY KEY (log_id)
);

select * from logs;


INSERT INTO logs (
    log_id,
    message,
    logged_at
    )

VALUES (
     3,
    'QW',
    LOCALTIMESTAMP(2)
    );

INSERT INTO logs (
    log_id,
    message,
    logged_at
    )

VALUES (
     2,
    'bb',
    LOCALTIMESTAMP(2)
    );


update logs 
set message = 'FB', logged_at = LOCALTIMESTAMP(2) 
where log_id = 2;

select localtimestamp(1); 

------------------------------------------------------------------------------------------------------------------
IBM DB2 DB:	 

CREATE TABLE stores(
    store_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    store_name VARCHAR(150) NOT NULL,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(20) NOT NULL,
    state VARCHAR(20) NOT NULL,
    zip_code VARCHAR(6),
    logged_at TIMESTAMP (2) NOT NULL,
    PRIMARY KEY (store_id)
);

SELECT * FROM STORES;

INSERT INTO stores (
    store_id,
    store_name,
    address,
    city,
    state,
    zip_code,
    logged_at
    )

VALUES (
     1,
    'Puma',
    'Dadar',
    'Mumbai',
    'Maharashtra',
    '235123',
    LOCALTIMESTAMP(2)
    );


